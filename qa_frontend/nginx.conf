user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 65535;
events {
    worker_connections  102400;

    use epoll;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main
        ' $remote_user [$time_local]  $http_x_Forwarded_for $remote_addr  $request '
        '$http_x_forwarded_for '
        '$upstream_addr '
        'ups_resp_time: $upstream_response_time '
        'request_time: $request_time';

    access_log  /var/log/nginx/access.log  main;


    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;
    keepalive_requests 10000;

    tcp_nodelay on;

    gzip on;       #表示开启压缩功能
    gzip_min_length  1k; #表示允许压缩的页面最小字节数，页面字节数从header头的Content-Length中获取。默认值是0，表示不管页面多大都进行压缩，建议设置成大于1K。如果小于1K可能会越压越大
    gzip_buffers     4 32k; #压缩缓存区大小
    gzip_http_version 1.1; #压缩版本
    gzip_comp_level 6; #压缩比率， 一般选择4-6，为了性能
    gzip_types text/css text/xml application/javascript;　　#指定压缩的类型 gzip_vary on;　#vary header支持

    upstream servers {

         server  60.204.203.173:8080;
         server  60.204.220.182:8080;
         server  60.204.218.211:8080;

         keepalive 300;
    }

    server {
        listen 80;#端口
        #listen [::]:80 default_server ipv6only=on;
        server_name localhost;#配置的访问ip端口

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
           root   /usr/share/nginx/html;
           index  index.html index.htm;
           autoindex on;
           try_files $uri $uri/ /index.html; #加上这句解决react 当前路由下 刷新 报404的问题
       }
        location /api/ {

            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header REMOTE-HOST $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_pass http://servers/;

        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }
}
